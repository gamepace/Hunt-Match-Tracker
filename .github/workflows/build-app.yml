name: Build Python Application

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'


permissions:
  write-all

jobs:
  build:

    runs-on: windows-latest
    strategy:
      fail-fast: true
      matrix: 
        python-version: ['3.11' ]

    # Build exe
    steps:
    - uses: actions/checkout@v2
      with:
        python-version: '3.11' 

    # setup python
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    # You can test your matrix by printing the current Python version
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    # Build package
    # - name: Package Application
    #   uses: JackMcKew/pyinstaller-action-windows@main
    #   with:
    #     path: .
    #     spec: hunt-match-tracker.spec

    # Build python script into a stand-alone exe
    - uses: Nuitka/Nuitka-Action@v0.4
      with:
        script-name: hunt-match-tracker.spec.py
    

    # Create release
    - name: release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: Release ${{ github.ref }}
        tag_name: ${{ github.ref }}
    
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: upload windows artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/windows/hunt-match-tracker.exe
        asset_name: hunt-match-tracker-${{ github.ref_name }}.exe
        asset_content_type: application/octet-stream

    